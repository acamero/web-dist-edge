{"id":"node_modules/@tensorflow/tfjs-layers/dist/engine/training_tensors.js","dependencies":[{"name":"/home/andu/Documents/git/web-dist-edge/examples/mnist/node_modules/@tensorflow/tfjs-layers/dist/engine/training_tensors.js.map","includedInParent":true,"mtime":1550574230668},{"name":"/home/andu/Documents/git/web-dist-edge/examples/mnist/package.json","includedInParent":true,"mtime":1550736445286},{"name":"/home/andu/Documents/git/web-dist-edge/examples/mnist/.babelrc","includedInParent":true,"mtime":1550128877340},{"name":"/home/andu/Documents/git/web-dist-edge/examples/mnist/node_modules/@tensorflow/tfjs-layers/package.json","includedInParent":true,"mtime":1550574230668},{"name":"@tensorflow/tfjs-core","loc":{"line":39,"column":26},"parent":"/home/andu/Documents/git/web-dist-edge/examples/mnist/node_modules/@tensorflow/tfjs-layers/dist/engine/training_tensors.js","resolved":"/home/andu/Documents/git/web-dist-edge/examples/mnist/node_modules/@tensorflow/tfjs-core/dist/tf-core.esm.js"},{"name":"../backend/tfjs_backend","loc":{"line":40,"column":29},"parent":"/home/andu/Documents/git/web-dist-edge/examples/mnist/node_modules/@tensorflow/tfjs-layers/dist/engine/training_tensors.js","resolved":"/home/andu/Documents/git/web-dist-edge/examples/mnist/node_modules/@tensorflow/tfjs-layers/dist/backend/tfjs_backend.js"},{"name":"../base_callbacks","loc":{"line":41,"column":31},"parent":"/home/andu/Documents/git/web-dist-edge/examples/mnist/node_modules/@tensorflow/tfjs-layers/dist/engine/training_tensors.js","resolved":"/home/andu/Documents/git/web-dist-edge/examples/mnist/node_modules/@tensorflow/tfjs-layers/dist/base_callbacks.js"},{"name":"../errors","loc":{"line":42,"column":23},"parent":"/home/andu/Documents/git/web-dist-edge/examples/mnist/node_modules/@tensorflow/tfjs-layers/dist/engine/training_tensors.js","resolved":"/home/andu/Documents/git/web-dist-edge/examples/mnist/node_modules/@tensorflow/tfjs-layers/dist/errors.js"},{"name":"../logs","loc":{"line":43,"column":21},"parent":"/home/andu/Documents/git/web-dist-edge/examples/mnist/node_modules/@tensorflow/tfjs-layers/dist/engine/training_tensors.js","resolved":"/home/andu/Documents/git/web-dist-edge/examples/mnist/node_modules/@tensorflow/tfjs-layers/dist/logs.js"},{"name":"../utils/math_utils","loc":{"line":44,"column":27},"parent":"/home/andu/Documents/git/web-dist-edge/examples/mnist/node_modules/@tensorflow/tfjs-layers/dist/engine/training_tensors.js","resolved":"/home/andu/Documents/git/web-dist-edge/examples/mnist/node_modules/@tensorflow/tfjs-layers/dist/utils/math_utils.js"}],"generated":{"js":"\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [0, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tfc = require(\"@tensorflow/tfjs-core\");\nvar tfjs_core_1 = require(\"@tensorflow/tfjs-core\");\nvar tfjs_backend_1 = require(\"../backend/tfjs_backend\");\nvar base_callbacks_1 = require(\"../base_callbacks\");\nvar errors_1 = require(\"../errors\");\nvar logs_1 = require(\"../logs\");\nvar math_utils_1 = require(\"../utils/math_utils\");\nfunction checkBatchSize(batchSize) {\n    tfc.util.assert(batchSize > 0 && Number.isInteger(batchSize), \"batchSize is required to be a positive integer, but got \" + batchSize);\n}\nexports.checkBatchSize = checkBatchSize;\nfunction sliceArrays(arrays, start, stop) {\n    if (arrays == null) {\n        return [null];\n    }\n    else if (Array.isArray(arrays)) {\n        return arrays.map(function (array) { return tfjs_backend_1.sliceAlongFirstAxis(array, start, stop - start); });\n    }\n    else {\n        return tfjs_backend_1.sliceAlongFirstAxis(arrays, start, stop - start);\n    }\n}\nexports.sliceArrays = sliceArrays;\nfunction sliceArraysByIndices(arrays, indices) {\n    return tfc.tidy(function () {\n        if (arrays == null) {\n            return null;\n        }\n        else if (Array.isArray(arrays)) {\n            return arrays.map(function (array) { return sliceArraysByIndices(array, indices); });\n        }\n        else {\n            return tfjs_backend_1.gather(arrays, indices.dtype === 'int32' ? indices : indices.toInt());\n        }\n    });\n}\nexports.sliceArraysByIndices = sliceArraysByIndices;\nfunction makeBatches(size, batchSize) {\n    var output = [];\n    var batchStart = 0;\n    var batchEnd = null;\n    while (batchStart < size) {\n        batchEnd = batchStart + batchSize;\n        if (batchEnd >= size) {\n            batchEnd = size;\n        }\n        output.push([batchStart, batchEnd]);\n        batchStart = batchEnd;\n    }\n    return output;\n}\nexports.makeBatches = makeBatches;\nfunction fitLoop(model, f, ins, outLabels, batchSize, epochs, verbose, callbacks, valF, valIns, shuffle, callbackMetrics, initialEpoch, stepsPerEpoch, validationSteps, yieldEvery) {\n    return __awaiter(this, void 0, void 0, function () {\n        var doValidation, numTrainSamples, indexArray, _a, callbackList, history, _loop_1, epoch, state_1;\n        return __generator(this, function (_b) {\n            switch (_b.label) {\n                case 0:\n                    if (batchSize == null) {\n                        batchSize = 32;\n                    }\n                    if (epochs == null) {\n                        epochs = 1;\n                    }\n                    if (shuffle == null) {\n                        shuffle = true;\n                    }\n                    if (initialEpoch == null) {\n                        initialEpoch = 0;\n                    }\n                    doValidation = false;\n                    if (valF != null && valIns != null) {\n                        doValidation = true;\n                    }\n                    if (validationSteps != null) {\n                        doValidation = true;\n                        if (stepsPerEpoch == null) {\n                            throw new errors_1.ValueError('Can only use `validationSteps` when doing step-wise training, ' +\n                                'i.e., `stepsPerEpoch` must be set.');\n                        }\n                    }\n                    numTrainSamples = model.checkNumSamples(ins, batchSize, stepsPerEpoch, 'steps_per_epoch');\n                    if (numTrainSamples != null) {\n                        indexArray = math_utils_1.range(0, numTrainSamples);\n                    }\n                    if (verbose == null) {\n                        verbose = 1;\n                    }\n                    _a = base_callbacks_1.configureCallbacks(callbacks, yieldEvery, verbose, epochs, initialEpoch, numTrainSamples, stepsPerEpoch, batchSize, doValidation, callbackMetrics), callbackList = _a.callbackList, history = _a.history;\n                    callbackList.setModel(model);\n                    model.history = history;\n                    return [4, callbackList.onTrainBegin()];\n                case 1:\n                    _b.sent();\n                    model.stopTraining_ = false;\n                    _loop_1 = function (epoch) {\n                        var epochLogs, epochIndexArray1D_1, batches_1, _loop_2, batchIndex, state_2;\n                        return __generator(this, function (_a) {\n                            switch (_a.label) {\n                                case 0: return [4, callbackList.onEpochBegin(epoch)];\n                                case 1:\n                                    _a.sent();\n                                    epochLogs = {};\n                                    if (!(stepsPerEpoch != null)) return [3, 2];\n                                    throw new errors_1.NotImplementedError('stepsPerEpoch mode is not implemented yet.');\n                                case 2:\n                                    if (shuffle === 'batch') {\n                                        throw new errors_1.NotImplementedError('batch shuffling is not implemneted yet');\n                                    }\n                                    else if (shuffle) {\n                                        tfjs_core_1.util.shuffle(indexArray);\n                                    }\n                                    epochIndexArray1D_1 = tfjs_core_1.tensor1d(indexArray);\n                                    batches_1 = makeBatches(numTrainSamples, batchSize);\n                                    _loop_2 = function (batchIndex) {\n                                        var batchLogs;\n                                        return __generator(this, function (_a) {\n                                            switch (_a.label) {\n                                                case 0:\n                                                    batchLogs = {};\n                                                    return [4, callbackList.onBatchBegin(batchIndex, batchLogs)];\n                                                case 1:\n                                                    _a.sent();\n                                                    tfc.tidy(function () {\n                                                        var batchStart = batches_1[batchIndex][0];\n                                                        var batchEnd = batches_1[batchIndex][1];\n                                                        var batchIds = tfjs_backend_1.sliceAlongFirstAxis(epochIndexArray1D_1, batchStart, batchEnd - batchStart);\n                                                        batchLogs['batch'] = batchIndex;\n                                                        batchLogs['size'] = batchEnd - batchStart;\n                                                        var insBatch = sliceArraysByIndices(ins, batchIds);\n                                                        var outs = f(insBatch);\n                                                        for (var i = 0; i < outLabels.length; ++i) {\n                                                            var label = outLabels[i];\n                                                            var out = outs[i];\n                                                            batchLogs[label] = out;\n                                                            tfc.keep(out);\n                                                        }\n                                                        if (batchIndex === batches_1.length - 1) {\n                                                            if (doValidation) {\n                                                                var valOuts = model.testLoop(valF, valIns, batchSize);\n                                                                for (var i = 0; i < outLabels.length; ++i) {\n                                                                    var label = outLabels[i];\n                                                                    var out = valOuts[i];\n                                                                    tfc.keep(out);\n                                                                    epochLogs['val_' + label] = out;\n                                                                }\n                                                            }\n                                                        }\n                                                    });\n                                                    return [4, callbackList.onBatchEnd(batchIndex, batchLogs)];\n                                                case 2:\n                                                    _a.sent();\n                                                    logs_1.disposeTensorsInLogs(batchLogs);\n                                                    if (model.stopTraining_) {\n                                                        return [2, \"break\"];\n                                                    }\n                                                    return [2];\n                                            }\n                                        });\n                                    };\n                                    batchIndex = 0;\n                                    _a.label = 3;\n                                case 3:\n                                    if (!(batchIndex < batches_1.length)) return [3, 6];\n                                    return [5, _loop_2(batchIndex)];\n                                case 4:\n                                    state_2 = _a.sent();\n                                    if (state_2 === \"break\")\n                                        return [3, 6];\n                                    _a.label = 5;\n                                case 5:\n                                    ++batchIndex;\n                                    return [3, 3];\n                                case 6:\n                                    epochIndexArray1D_1.dispose();\n                                    _a.label = 7;\n                                case 7: return [4, callbackList.onEpochEnd(epoch, epochLogs)];\n                                case 8:\n                                    _a.sent();\n                                    if (model.stopTraining_) {\n                                        return [2, \"break\"];\n                                    }\n                                    return [2];\n                            }\n                        });\n                    };\n                    epoch = initialEpoch;\n                    _b.label = 2;\n                case 2:\n                    if (!(epoch < epochs)) return [3, 5];\n                    return [5, _loop_1(epoch)];\n                case 3:\n                    state_1 = _b.sent();\n                    if (state_1 === \"break\")\n                        return [3, 5];\n                    _b.label = 4;\n                case 4:\n                    ++epoch;\n                    return [3, 2];\n                case 5: return [4, callbackList.onTrainEnd()];\n                case 6:\n                    _b.sent();\n                    return [4, model.history.syncData()];\n                case 7:\n                    _b.sent();\n                    return [2, model.history];\n            }\n        });\n    });\n}\nfunction fitTensors(model, x, y, args) {\n    if (args === void 0) { args = {}; }\n    return __awaiter(this, void 0, void 0, function () {\n        var inputs, targets, inputValX, inputValY, valX, valY, batchSize, standardizedOuts, doValidation, valIns, valStandardized, splitAt, originalBatchSize, ins, trainFunction, outLabels, valFunction, callbackMetrics, callbacks, out;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    if (model.isTraining) {\n                        throw new Error('Cannot start training because another fit() call is ongoing.');\n                    }\n                    model.isTraining = true;\n                    _a.label = 1;\n                case 1:\n                    _a.trys.push([1, , 3, 4]);\n                    batchSize = args.batchSize == null ? 32 : args.batchSize;\n                    checkBatchSize(batchSize);\n                    standardizedOuts = model.standardizeUserData(x, y, false, batchSize);\n                    inputs = standardizedOuts[0];\n                    targets = standardizedOuts[1];\n                    doValidation = false;\n                    valIns = void 0;\n                    if (args.validationData != null && args.validationData.length > 0) {\n                        doValidation = true;\n                        if (args.validationData.length === 2) {\n                            inputValX = args.validationData[0];\n                            inputValY = args.validationData[1];\n                        }\n                        else if (args.validationData.length === 3) {\n                            throw new errors_1.NotImplementedError('validationData including sample weights is not supported yet.');\n                        }\n                        else {\n                            throw new errors_1.ValueError(\"When passing validation data, it must contain 2 (valX, valY) \" +\n                                \"or 3 (valX, valY, valSampleWeight) items; \" +\n                                (args.validationData + \" is invalid.\"));\n                        }\n                        valStandardized = model.standardizeUserData(inputValX, inputValY, true, batchSize);\n                        valX = valStandardized[0];\n                        valY = valStandardized[1];\n                        valIns = valX.concat(valY);\n                    }\n                    else if (args.validationSplit != null && args.validationSplit > 0 &&\n                        args.validationSplit < 1) {\n                        doValidation = true;\n                        splitAt = Math.floor(inputs[0].shape[0] * (1 - args.validationSplit));\n                        originalBatchSize = inputs[0].shape[0];\n                        valX = sliceArrays(inputs, splitAt, originalBatchSize);\n                        inputs = sliceArrays(inputs, 0, splitAt);\n                        valY = sliceArrays(targets, splitAt, originalBatchSize);\n                        targets = sliceArrays(targets, 0, splitAt);\n                        valIns = valX.concat(valY);\n                    }\n                    else if (args.validationSteps != null) {\n                        doValidation = true;\n                    }\n                    ins = inputs.concat(targets);\n                    model.checkTrainableWeightsConsistency();\n                    trainFunction = model.makeTrainFunction();\n                    outLabels = model.getDedupedMetricsNames();\n                    valFunction = void 0;\n                    callbackMetrics = void 0;\n                    if (doValidation) {\n                        model.makeTestFunction();\n                        valFunction = model.testFunction;\n                        callbackMetrics =\n                            outLabels.slice().concat(outLabels.map(function (n) { return 'val_' + n; }));\n                    }\n                    else {\n                        valFunction = null;\n                        valIns = [];\n                        callbackMetrics = outLabels.slice();\n                    }\n                    callbacks = base_callbacks_1.standardizeCallbacks(args.callbacks);\n                    return [4, fitLoop(model, trainFunction, ins, outLabels, batchSize, args.epochs, args.verbose, callbacks, valFunction, valIns, args.shuffle, callbackMetrics, args.initialEpoch, null, null, args.yieldEvery)];\n                case 2:\n                    out = _a.sent();\n                    return [2, out];\n                case 3:\n                    model.isTraining = false;\n                    disposeNewTensors(inputs, x);\n                    disposeNewTensors(targets, y);\n                    disposeNewTensors(valX, inputValX);\n                    disposeNewTensors(valY, inputValY);\n                    return [7];\n                case 4: return [2];\n            }\n        });\n    });\n}\nexports.fitTensors = fitTensors;\nfunction ensureTensorsRank2OrHigher(tensors) {\n    var outs = [];\n    if (tensors instanceof tfjs_core_1.Tensor) {\n        tensors = [tensors];\n    }\n    for (var i = 0; i < tensors.length; ++i) {\n        var tensor = tensors[i];\n        if (tensor.rank === 1) {\n            outs.push(tfjs_backend_1.expandDims(tensor, 1));\n        }\n        else if (tensor.rank === 0) {\n            throw new Error('Expected tensor to be at least 1D, but received a 0D tensor ' +\n                '(scalar).');\n        }\n        else {\n            outs.push(tensor);\n        }\n    }\n    return outs;\n}\nexports.ensureTensorsRank2OrHigher = ensureTensorsRank2OrHigher;\nfunction disposeNewTensors(tensors, refTensors) {\n    if (tensors == null) {\n        return;\n    }\n    var oldTensorIds = [];\n    if (refTensors instanceof tfjs_core_1.Tensor) {\n        oldTensorIds.push(refTensors.id);\n    }\n    else if (Array.isArray(refTensors)) {\n        refTensors.forEach(function (t) { return oldTensorIds.push(t.id); });\n    }\n    else if (refTensors != null) {\n        for (var name_1 in refTensors) {\n            var oldTensor = refTensors[name_1];\n            oldTensorIds.push(oldTensor.id);\n        }\n    }\n    var tensorsToDispose = [];\n    if (tensors instanceof tfjs_core_1.Tensor) {\n        if (oldTensorIds.indexOf(tensors.id) === -1) {\n            tensorsToDispose.push(tensors);\n        }\n    }\n    else if (Array.isArray(tensors)) {\n        tensors.forEach(function (t) {\n            if (oldTensorIds.indexOf(t.id) === -1) {\n                tensorsToDispose.push(t);\n            }\n        });\n    }\n    else if (tensors != null) {\n        for (var name_2 in tensors) {\n            var tensor = tensors[name_2];\n            if (oldTensorIds.indexOf(tensor.id) === -1) {\n                tensorsToDispose.push(tensor);\n            }\n        }\n    }\n    tensorsToDispose.forEach(function (t) {\n        if (!t.isDisposed) {\n            t.dispose();\n        }\n    });\n}\nexports.disposeNewTensors = disposeNewTensors;\n","map":{"version":3,"file":"training_tensors.js","sourceRoot":"","sources":["../../src/engine/training_tensors.ts"],"names":[],"mappings":"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","sourcesContent":[null]}},"hash":"1ad512b1efdf5b68ac0bded92b7c2175","cacheData":{"env":{}}}