{"id":"node_modules/@tensorflow/tfjs-layers/dist/engine/input_layer.js","dependencies":[{"name":"/home/andu/Documents/git/web-dist-edge/examples/mnist/node_modules/@tensorflow/tfjs-layers/dist/engine/input_layer.js.map","includedInParent":true,"mtime":1550574230668},{"name":"/home/andu/Documents/git/web-dist-edge/examples/mnist/package.json","includedInParent":true,"mtime":1550736445286},{"name":"/home/andu/Documents/git/web-dist-edge/examples/mnist/.babelrc","includedInParent":true,"mtime":1550128877340},{"name":"/home/andu/Documents/git/web-dist-edge/examples/mnist/node_modules/@tensorflow/tfjs-layers/package.json","includedInParent":true,"mtime":1550574230668},{"name":"@tensorflow/tfjs-core","loc":{"line":13,"column":26},"parent":"/home/andu/Documents/git/web-dist-edge/examples/mnist/node_modules/@tensorflow/tfjs-layers/dist/engine/input_layer.js","resolved":"/home/andu/Documents/git/web-dist-edge/examples/mnist/node_modules/@tensorflow/tfjs-core/dist/tf-core.esm.js"},{"name":"../backend/state","loc":{"line":14,"column":22},"parent":"/home/andu/Documents/git/web-dist-edge/examples/mnist/node_modules/@tensorflow/tfjs-layers/dist/engine/input_layer.js","resolved":"/home/andu/Documents/git/web-dist-edge/examples/mnist/node_modules/@tensorflow/tfjs-layers/dist/backend/state.js"},{"name":"../errors","loc":{"line":15,"column":23},"parent":"/home/andu/Documents/git/web-dist-edge/examples/mnist/node_modules/@tensorflow/tfjs-layers/dist/engine/input_layer.js","resolved":"/home/andu/Documents/git/web-dist-edge/examples/mnist/node_modules/@tensorflow/tfjs-layers/dist/errors.js"},{"name":"./topology","loc":{"line":16,"column":25},"parent":"/home/andu/Documents/git/web-dist-edge/examples/mnist/node_modules/@tensorflow/tfjs-layers/dist/engine/input_layer.js","resolved":"/home/andu/Documents/git/web-dist-edge/examples/mnist/node_modules/@tensorflow/tfjs-layers/dist/engine/topology.js"}],"generated":{"js":"\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tfjs_core_1 = require(\"@tensorflow/tfjs-core\");\nvar state_1 = require(\"../backend/state\");\nvar errors_1 = require(\"../errors\");\nvar topology_1 = require(\"./topology\");\nvar InputLayer = (function (_super) {\n    __extends(InputLayer, _super);\n    function InputLayer(args) {\n        var _this = _super.call(this, {\n            dtype: args.dtype,\n            name: args.name != null ? args.name : state_1.getUid('input').toString()\n        }) || this;\n        if (args.batchSize == null) {\n            args.batchSize = null;\n        }\n        if (args.sparse == null) {\n            args.sparse = false;\n        }\n        _this.trainable = false;\n        _this.built = true;\n        _this.sparse = args.sparse;\n        if (args.inputShape != null && args.batchInputShape != null) {\n            throw new errors_1.ValueError('Only provide the inputShape OR ' +\n                'batchInputShape argument to inputLayer, not both at the same time.');\n        }\n        var batchInputShape = args.batchInputShape;\n        if (batchInputShape == null) {\n            if (args.inputShape == null) {\n                throw new errors_1.ValueError('An InputLayer should be passed either a ' +\n                    '`batchInputShape` or an `inputShape`.');\n            }\n            else {\n                batchInputShape = [args.batchSize].concat(args.inputShape);\n            }\n        }\n        else {\n            if (args.batchSize != null) {\n                throw new errors_1.ValueError('Cannot specify batchSize if batchInputShape is' +\n                    'specified when creating an InputLayer.');\n            }\n        }\n        var dtype = args.dtype || 'float32';\n        _this.batchInputShape = batchInputShape;\n        _this.dtype = dtype;\n        _this.inputSpec = [{ shape: batchInputShape }];\n        var inputTensor = new topology_1.SymbolicTensor(_this.dtype, _this.batchInputShape, _this, [], {}, _this.name);\n        inputTensor.nodeIndex = 0;\n        inputTensor.tensorIndex = 0;\n        new topology_1.Node({\n            outboundLayer: _this,\n            inboundLayers: [],\n            nodeIndices: [],\n            tensorIndices: [],\n            inputTensors: [inputTensor],\n            outputTensors: [inputTensor],\n            inputMasks: [null],\n            outputMasks: [null],\n            inputShapes: [batchInputShape],\n            outputShapes: [batchInputShape]\n        });\n        return _this;\n    }\n    InputLayer.prototype.apply = function (inputs, kwargs) {\n        throw new errors_1.ValueError('Cannot pass any input to an ' +\n            (\"InputLayer's apply() method. InputLayer name: \" + this.name));\n    };\n    InputLayer.prototype.dispose = function () {\n        return { refCountAfterDispose: this._refCount, numDisposedVariables: 0 };\n    };\n    InputLayer.prototype.getConfig = function () {\n        return {\n            batchInputShape: this.batchInputShape,\n            dtype: this.dtype,\n            sparse: this.sparse,\n            name: this.name\n        };\n    };\n    InputLayer.className = 'InputLayer';\n    return InputLayer;\n}(topology_1.Layer));\nexports.InputLayer = InputLayer;\ntfjs_core_1.serialization.registerClass(InputLayer);\nfunction Input(config) {\n    if (config.batchShape == null && config.shape == null) {\n        throw new Error('Please provide to Input either a `shape`' +\n            ' or a `batchShape` argument. Note that ' +\n            '`shape` does not include the batch ' +\n            'dimension.');\n    }\n    if (config.batchShape != null && config.shape != null) {\n        throw new errors_1.ValueError('Please provide either a `shape` or `batchShape` ' +\n            'argument to Input, but not both.');\n    }\n    var batchShape = config.batchShape;\n    if (config.shape != null && batchShape == null) {\n        batchShape = [null].concat(config.shape);\n    }\n    var dtype = config.dtype;\n    if (dtype == null) {\n        dtype = 'float32';\n    }\n    var inputLayer = new InputLayer({\n        batchInputShape: batchShape,\n        name: config.name,\n        dtype: dtype,\n        sparse: config.sparse\n    });\n    var outputs = inputLayer.inboundNodes[0].outputTensors;\n    return outputs[0];\n}\nexports.Input = Input;\n","map":{"version":3,"file":"input_layer.js","sourceRoot":"","sources":["../../src/engine/input_layer.ts"],"names":[],"mappings":"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","sourcesContent":[null]}},"hash":"91131b14942cbabc14e968869760731b","cacheData":{"env":{}}}